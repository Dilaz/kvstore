name: Build, Test, Deploy to k8s

on:
  push:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Build and test code
        run: |
          cargo build --verbose
          cargo test --verbose
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ghcr.io/dilaz/kvstore:${{ github.sha }},ghcr.io/dilaz/kvstore:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # - name: Optimize the Docker image with Slim Toolkit
      #   uses: kitabisa/docker-slim-action@v1
      #   env:
      #     DSLIM_HTTP_PROBE: false
      #   with:
      #     target: ghcr.io/dilaz/kvstore:${{ github.sha }}
      #     tag: latest
      # - name: Push Docker image
      #   run: |
      #     docker tag ghcr.io/dilaz/kvstore:latest ghcr.io/dilaz/kvstore:${{ github.sha }}
      #     docker push ghcr.io/dilaz/kvstore --all-tags
  deploy:
    name: Deploy
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_HOST }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v4
        with:
          namespace: kvstore
          action: deploy
          strategy: basic
          manifests: |
            k8s/deployment.yaml
            k8s/ingress.yaml
            k8s/service.yaml
          images: |
            ghcr.io/dilaz/kvstore:${{ github.sha }}
  rollback:
    if: failure()
    name: Rollback
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_HOST }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      - name: Rollback
        run: |
          kubectl rollout undo deployment kvstore-deployment -n kvstore